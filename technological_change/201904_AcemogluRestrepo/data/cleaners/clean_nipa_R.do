/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Automation and New Tasks: How Technology Changes Labor Demand" 
by D. Acemoglu and P. Restrepo, JEP 2019


Cleans NIPA data on capital quantitites, stocks, and measures of user costs
7.23.2018 (revised 2.21.2019)
Pascual Restrepo

revised by G. Marcolongo on 03.04.2019
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

***Step 1: Load data from NIPA***

****************************************
******Stock of private equipment********
****************************************
local varname stock
local type    equip

**FAAt301E	Table 3.1E. Current-Cost Net Stock of Private Equipment by Industry---in current billion dollars**
import excel "${project}/raw_data/industry/Section3All_xls.xlsx", sheet("FAAt301E-A") cellrange(A8:BV93) firstrow clear
rename B industry_nipa
drop if industry_nipa==""
drop Line C
foreach v of varlist D-BV{ 
rename `v' nipa_`varname'_val_`type'`: var label `v'' 
} 
reshape long nipa_`varname'_val_`type', i(industry_nipa) j(year)
tempfile values
save `values'

**FAAt304E	Table 3.4E. Current-Cost Depreciation of Private Equipment by Industry---in current billion dollars**
import excel "${project}/raw_data/industry/Section3All_xls.xlsx", sheet("FAAt304E-A") cellrange(A8:BV93) firstrow clear
rename B industry_nipa
drop if industry_nipa==""
drop Line C
foreach v of varlist D-BV{ 
rename `v' nipa_`varname'_dep_`type'`: var label `v'' 
} 
reshape long nipa_`varname'_dep_`type', i(industry_nipa) j(year)
merge 1:1 year industry_nipa using `values', assert(3) nogenerate

**Compute depreciation rate**
sort industry_nipa year
gen nipa_drate_`type'=nipa_`varname'_dep_`type'/(nipa_`varname'_dep_`type'+nipa_`varname'_val_`type')

*Impute zero values (generated by rounding up of billion figures)*
*Interpolate linearly*
sort industry_nipa year
replace nipa_drate_`type'=. if nipa_drate_`type'==0
bys industry_nipa: ipolate nipa_drate_`type' year, generate(newvar) 
replace nipa_drate_`type'=newvar

*Impute back in time using average depreciation rate*
bys year: egen aggregate_delta=total(nipa_drate_`type'*(industry_nipa=="    Private fixed assets"))
assert aggregate_delta!=. & aggregate_delta>0
gen negyear=-year
sort industry_nipa negyear
replace nipa_drate_`type'=nipa_drate_`type'[_n-1]*aggregate_delta[_n]/aggregate_delta[_n-1] if nipa_drate_`type'==.

*Clean*
keep industry_nipa year nipa_*
save `values', replace

**FAAt302E	Table 3.2E. Chain-Type Quantity Indexes for Net Stock of Private Equipment by Industry---Quantity index**
import excel "${project}/raw_data/industry/Section3All_xls.xlsx", sheet("FAAt302E-A") cellrange(A8:BV93) firstrow clear
rename B industry_nipa
drop if industry_nipa==""
drop Line C
foreach v of varlist D-BV{ 
rename `v' nipa_`varname'_qty_`type'`: var label `v'' 
} 
reshape long nipa_`varname'_qty_`type', i(industry_nipa) j(year)

merge 1:1 year industry_nipa using `values', assert(3) nogenerate

**Match NIPA industries to "industry_bea"**
gen industry_bea=industry_nipa
replace industry_bea="Rail transportation" if strpos(industry_nipa,"Railroad transportation")
replace industry_bea="Publishing industries, except internet (includes software)"	 if strpos(industry_nipa,"Publishing industries (includes software)")
replace industry_bea="Data processing, internet publishing, and other information services"	 if strpos(industry_nipa,"Information and data processing services")
replace industry_bea="Federal Reserve banks, credit intermediation, and related activities"	 if strpos(industry_nipa,"Federal Reserve banks")
replace industry_bea="Federal Reserve banks, credit intermediation, and related activities"	 if strpos(industry_nipa,"Credit intermediation and related activities")
replace industry_bea="Hospitals and nursing and residential care facilities" if strpos(industry_nipa,"Hospitals")
replace industry_bea="Hospitals and nursing and residential care facilities" if strpos(industry_nipa,"Nursing and residential care facilities")
replace industry_bea=ltrim(rtrim(industry_bea))

*Create price index (nominal---relative to 2007)*
sort industry_nipa year
bys industry_nipa: gen nipa_`varname'_price_`type'=100*(nipa_`varname'_val_`type'/nipa_`varname'_qty_`type')/(nipa_`varname'_val_`type'[61]/nipa_`varname'_qty_`type'[61])

*Impute zero values (generated by rounding up of billion figures)*
*Interpolate linearly*
sort industry_nipa year
replace nipa_`varname'_price_`type'=. if nipa_`varname'_price_`type'==0
bys industry_nipa: ipolate nipa_`varname'_price_`type' year, generate(newvar) 
replace nipa_`varname'_price_`type'=newvar

*Impute back in time using average price index*
bys year: egen aggregate_price=total(nipa_`varname'_price_`type'*(industry_nipa=="    Private fixed assets"))
assert aggregate_price!=. & aggregate_price>0
gen negyear=-year
sort industry_nipa negyear
replace nipa_`varname'_price_`type'=nipa_`varname'_price_`type'[_n-1]*aggregate_price[_n]/aggregate_price[_n-1] if nipa_`varname'_price_`type'==.

*Rounding*
replace nipa_`varname'_val_`type'=0.1 if nipa_`varname'_val_`type'==0

*Consolidate industries*
collapse (rawsum) *_val_* (mean) *_qty_* *_price_* *_drate_* [w=nipa_`varname'_val_`type'], by(industry_bea year)
save "${project}/temp_data/nipa_capital.dta", replace

*************************************
******Investment in equipment********
*************************************
local varname invest
local type    equip

**FAAt307E	Table 3.7E. Investment in Private Equipment by Industry---in current billion dollars**
import excel "${project}/raw_data/industry/Section3All_xls.xlsx", sheet("FAAt307E-A") cellrange(A8:BV93) firstrow clear
rename B industry_nipa
drop if industry_nipa==""
drop Line C
foreach v of varlist D-BV{ 
rename `v' nipa_`varname'_val_`type'`: var label `v'' 
} 
reshape long nipa_`varname'_val_`type', i(industry_nipa) j(year)
tempfile values
save `values'

**FAAt308E	Table 3.8E. Chain-Type Quantity Indexes for Investment in Private Equipment by Industry---Quantity index**
import excel "${project}/raw_data/industry/Section3All_xls.xlsx", sheet("FAAt308E-A") cellrange(A8:BV93) firstrow clear
rename B industry_nipa
drop if industry_nipa==""
drop Line C
foreach v of varlist D-BV{ 
rename `v' nipa_`varname'_qty_`type'`: var label `v'' 
} 
reshape long nipa_`varname'_qty_`type', i(industry_nipa) j(year)

merge 1:1 year industry_nipa using `values', assert(3) nogenerate

**Match NIPA industries to "industry_bea"**
gen industry_bea=industry_nipa
replace industry_bea="Rail transportation" if strpos(industry_nipa,"Railroad transportation")
replace industry_bea="Publishing industries, except internet (includes software)"	 if strpos(industry_nipa,"Publishing industries (includes software)")
replace industry_bea="Data processing, internet publishing, and other information services"	 if strpos(industry_nipa,"Information and data processing services")
replace industry_bea="Federal Reserve banks, credit intermediation, and related activities"	 if strpos(industry_nipa,"Federal Reserve banks")
replace industry_bea="Federal Reserve banks, credit intermediation, and related activities"	 if strpos(industry_nipa,"Credit intermediation and related activities")
replace industry_bea="Hospitals and nursing and residential care facilities" if strpos(industry_nipa,"Hospitals")
replace industry_bea="Hospitals and nursing and residential care facilities" if strpos(industry_nipa,"Nursing and residential care facilities")
replace industry_bea=ltrim(rtrim(industry_bea))

*Create price index (nominal---relative to 2007)*
sort industry_nipa year
bys industry_nipa: gen nipa_`varname'_price_`type'=100*(nipa_`varname'_val_`type'/nipa_`varname'_qty_`type')/(nipa_`varname'_val_`type'[61]/nipa_`varname'_qty_`type'[61])

*Impute zero values (generated by rounding up of billion figures)*

*Interpolate linearly*
sort industry_nipa year
replace nipa_`varname'_price_`type'=. if nipa_`varname'_price_`type'==0
bys industry_nipa: ipolate nipa_`varname'_price_`type' year, generate(newvar) 
replace nipa_`varname'_price_`type'=newvar

*Impute back in time using average price index*
bys year: egen aggregate_price=total(nipa_`varname'_price_`type'*(industry_nipa=="    Private fixed assets"))
assert aggregate_price!=. & aggregate_price>0
gen negyear=-year
sort industry_nipa negyear
replace nipa_`varname'_price_`type'=nipa_`varname'_price_`type'[_n-1]*aggregate_price[_n]/aggregate_price[_n-1] if nipa_`varname'_price_`type'==.

*Rounding*
replace nipa_`varname'_val_`type'=0.1 if nipa_`varname'_val_`type'==0

*Consolidate industries*
collapse (rawsum) *_val_* (mean) *_qty_* *_price_* [w=nipa_`varname'_val_`type'], by(industry_bea year)
merge 1:1 industry_bea year using "${project}/temp_data/nipa_capital.dta", assert(3) nogenerate
save "${project}/temp_data/nipa_capital.dta", replace

****************************************
******Stock of all fixed assets*********
****************************************
local varname stock
local type    fa

**FAAt301ESI	Table 3.1ESI. Current-Cost Net Stock of Private Fixed Assets by Industry---in current billion dollars**
import excel "${project}/raw_data/industry/Section3All_xls.xlsx", sheet("FAAt301ESI-A") cellrange(A8:BV93) firstrow clear
rename B industry_nipa
drop if industry_nipa==""
drop Line C
foreach v of varlist D-BV{ 
rename `v' nipa_`varname'_val_`type'`: var label `v'' 
} 
reshape long nipa_`varname'_val_`type', i(industry_nipa) j(year)
tempfile values
save `values'

**FAAt304ESI	Table 3.4ESI. Current-Cost Depreciation of Private Fixed Assets by Industry---in current billion dollars**
import excel "${project}/raw_data/industry/Section3All_xls.xlsx", sheet("FAAt304ESI-A") cellrange(A8:BV93) firstrow clear
rename B industry_nipa
drop if industry_nipa==""
drop Line C
foreach v of varlist D-BV{ 
rename `v' nipa_`varname'_dep_`type'`: var label `v'' 
} 
reshape long nipa_`varname'_dep_`type', i(industry_nipa) j(year)
merge 1:1 year industry_nipa using `values', assert(3) nogenerate

**Compute depreciation rate**
sort industry_nipa year
gen nipa_drate_`type'=nipa_`varname'_dep_`type'/(nipa_`varname'_dep_`type'+nipa_`varname'_val_`type')

*Impute zero values (generated by rounding up of billion figures)*
*Interpolate linearly*
sort industry_nipa year
replace nipa_drate_`type'=. if nipa_drate_`type'==0
bys industry_nipa: ipolate nipa_drate_`type' year, generate(newvar) 
replace nipa_drate_`type'=newvar

*Impute back in time using average depreciation rate*
bys year: egen aggregate_delta=total(nipa_drate_`type'*(industry_nipa=="    Private fixed assets"))
assert aggregate_delta!=. & aggregate_delta>0
gen negyear=-year
sort industry_nipa negyear
replace nipa_drate_`type'=nipa_drate_`type'[_n-1]*aggregate_delta[_n]/aggregate_delta[_n-1] if nipa_drate_`type'==.

*Clean*
keep industry_nipa year nipa_*
save `values', replace

**FAAt302ESI	Table 3.2ESI. Chain-Type Quantity Indexes for Net Stock of Private Fixed Assets by Industry---Quantity index**
import excel "${project}/raw_data/industry/Section3All_xls.xlsx", sheet("FAAt302ESI-A") cellrange(A8:BV93) firstrow clear
rename B industry_nipa
drop if industry_nipa==""
drop Line C
foreach v of varlist D-BV{ 
rename `v' nipa_`varname'_qty_`type'`: var label `v'' 
} 
reshape long nipa_`varname'_qty_`type', i(industry_nipa) j(year)

merge 1:1 year industry_nipa using `values', assert(3) nogenerate

**Match NIPA industries to "industry_bea"**
gen industry_bea=industry_nipa
replace industry_bea="Rail transportation" if strpos(industry_nipa,"Railroad transportation")
replace industry_bea="Publishing industries, except internet (includes software)"	 if strpos(industry_nipa,"Publishing industries (includes software)")
replace industry_bea="Data processing, internet publishing, and other information services"	 if strpos(industry_nipa,"Information and data processing services")
replace industry_bea="Federal Reserve banks, credit intermediation, and related activities"	 if strpos(industry_nipa,"Federal Reserve banks")
replace industry_bea="Federal Reserve banks, credit intermediation, and related activities"	 if strpos(industry_nipa,"Credit intermediation and related activities")
replace industry_bea="Hospitals and nursing and residential care facilities" if strpos(industry_nipa,"Hospitals")
replace industry_bea="Hospitals and nursing and residential care facilities" if strpos(industry_nipa,"Nursing and residential care facilities")
replace industry_bea=ltrim(rtrim(industry_bea))

*Create price index (nominal---relative to 2007)*
sort industry_nipa year
bys industry_nipa: gen nipa_`varname'_price_`type'=100*(nipa_`varname'_val_`type'/nipa_`varname'_qty_`type')/(nipa_`varname'_val_`type'[61]/nipa_`varname'_qty_`type'[61])

*Impute zero values (generated by rounding up of billion figures)*
*Interpolate linearly*
sort industry_nipa year
replace nipa_`varname'_price_`type'=. if nipa_`varname'_price_`type'==0
bys industry_nipa: ipolate nipa_`varname'_price_`type' year, generate(newvar) 
replace nipa_`varname'_price_`type'=newvar

*Impute back in time using average price index*
bys year: egen aggregate_price=total(nipa_`varname'_price_`type'*(industry_nipa=="    Private fixed assets"))
assert aggregate_price!=. & aggregate_price>0
gen negyear=-year
sort industry_nipa negyear
replace nipa_`varname'_price_`type'=nipa_`varname'_price_`type'[_n-1]*aggregate_price[_n]/aggregate_price[_n-1] if nipa_`varname'_price_`type'==.

*Rounding*
replace nipa_`varname'_val_`type'=0.1 if nipa_`varname'_val_`type'==0

*Consolidate industries*
collapse (rawsum) *_val_* (mean) *_qty_* *_price_* *_drate_* [w=nipa_`varname'_val_`type'], by(industry_bea year)
merge 1:1 industry_bea year using "${project}/temp_data/nipa_capital.dta", assert(3) nogenerate
save "${project}/temp_data/nipa_capital.dta", replace

***************************************
******Investment in fixed asset********
***************************************
local varname invest
local type    fa

**FAAt307ESI	Table 3.7ESI. Investment in Private Fixed Assets by Industry---in current billion dollars**
import excel "${project}/raw_data/industry/Section3All_xls.xlsx", sheet("FAAt307ESI-A") cellrange(A8:BV93) firstrow clear
rename B industry_nipa
drop if industry_nipa==""
drop Line C
foreach v of varlist D-BV{ 
rename `v' nipa_`varname'_val_`type'`: var label `v'' 
} 
reshape long nipa_`varname'_val_`type', i(industry_nipa) j(year)
tempfile values
save `values'

**FAAt308ESI	Table 3.8ESI. Chain-Type Quantity Indexes for Investment in Private Fixed Assets by Industry---Quantity index**
import excel "${project}/raw_data/industry/Section3All_xls.xlsx", sheet("FAAt308ESI-A") cellrange(A8:BV93) firstrow clear
rename B industry_nipa
drop if industry_nipa==""
drop Line C
foreach v of varlist D-BV{ 
rename `v' nipa_`varname'_qty_`type'`: var label `v'' 
} 
reshape long nipa_`varname'_qty_`type', i(industry_nipa) j(year)

merge 1:1 year industry_nipa using `values', assert(3) nogenerate

**Match NIPA industries to "industry_bea"**
gen industry_bea=industry_nipa
replace industry_bea="Rail transportation" if strpos(industry_nipa,"Railroad transportation")
replace industry_bea="Publishing industries, except internet (includes software)"	 if strpos(industry_nipa,"Publishing industries (includes software)")
replace industry_bea="Data processing, internet publishing, and other information services"	 if strpos(industry_nipa,"Information and data processing services")
replace industry_bea="Federal Reserve banks, credit intermediation, and related activities"	 if strpos(industry_nipa,"Federal Reserve banks")
replace industry_bea="Federal Reserve banks, credit intermediation, and related activities"	 if strpos(industry_nipa,"Credit intermediation and related activities")
replace industry_bea="Hospitals and nursing and residential care facilities" if strpos(industry_nipa,"Hospitals")
replace industry_bea="Hospitals and nursing and residential care facilities" if strpos(industry_nipa,"Nursing and residential care facilities")
replace industry_bea=ltrim(rtrim(industry_bea))

*Create price index (nominal---relative to 2007)*
sort industry_nipa year
bys industry_nipa: gen nipa_`varname'_price_`type'=100*(nipa_`varname'_val_`type'/nipa_`varname'_qty_`type')/(nipa_`varname'_val_`type'[61]/nipa_`varname'_qty_`type'[61])

*Impute zero values (generated by rounding up of billion figures)*

*Interpolate linearly*
sort industry_nipa year
replace nipa_`varname'_price_`type'=. if nipa_`varname'_price_`type'==0
bys industry_nipa: ipolate nipa_`varname'_price_`type' year, generate(newvar) 
replace nipa_`varname'_price_`type'=newvar

*Impute back in time using average price index*
bys year: egen aggregate_price=total(nipa_`varname'_price_`type'*(industry_nipa=="    Private fixed assets"))
assert aggregate_price!=. & aggregate_price>0
gen negyear=-year
sort industry_nipa negyear
replace nipa_`varname'_price_`type'=nipa_`varname'_price_`type'[_n-1]*aggregate_price[_n]/aggregate_price[_n-1] if nipa_`varname'_price_`type'==.

*Rounding*
replace nipa_`varname'_val_`type'=0.1 if nipa_`varname'_val_`type'==0

*Consolidate industries*
collapse (rawsum) *_val_* (mean) *_qty_* *_price_* [w=nipa_`varname'_val_`type'], by(industry_bea year)
merge 1:1 industry_bea year using "${project}/temp_data/nipa_capital.dta", assert(3) nogenerate
save "${project}/temp_data/nipa_capital.dta", replace


***Step 2: Match the data to master xwalk and keep relevant industries***
replace industry_bea=ltrim(rtrim(industry_bea))
replace industry_bea="Farms" if industry_bea=="Farms \1\"
replace industry_bea="Management of companies and enterprises" if industry_bea=="Management of companies and enterprises \5\"
replace industry_bea="Miscellaneous professional, scientific, and technical services" if industry_bea=="Miscellaneous professional, scientific, and technical services \4\"
replace industry_bea="Other transportation and support activities" if industry_bea=="Other transportation and support activities \2\"
replace industry_bea="Rental and leasing services and lessors of intangible assets" if industry_bea=="Rental and leasing services and lessors of intangible assets \3\"
merge m:1 industry_bea using "${project}/xwalks/master_xwalk.dta", assert(1 3) keep(3) nogenerate

***Step 3: Construct measures of capital quantities and rental rates***
*Additional macroeconomic data*
merge m:1 year using "${project}/raw_data/aggregates/consumer_price_pce.dta", assert(2 3) keep(3) nogenerate
merge m:1 year using "${project}/raw_data/aggregates/taxes_KN.dta", assert(2 3) keep(3) nogenerate
merge m:1 year using "${project}/raw_data/aggregates/rognlie_r.dta", keep(3) nogenerate

*Declare panel structure*
encode industry_bea, gen(indcode)
xtset indcode year
sort indcode year

*Choose measure to use (baseline we use investment prices for all assets)*
gen nipa_PK_nom=nipa_invest_price_fa
gen nipa_PK_real=100*nipa_invest_price_fa*price_us/(nipa_invest_price_fa[61]*price_us[61])
gen nipa_delta=nipa_drate_fa
gen nipa_capvalue=nipa_stock_val_fa
gen nipa_capqty=nipa_stock_qty_fa

*Generate measures of capital gains*
sort indcode year
gen cap_gain=ln(nipa_PK_nom)-ln(l.nipa_PK_nom) 			/*Measure of nominal inflation in capital prices*/
gen cap_gain_real=ln(nipa_PK_real)-ln(l.nipa_PK_real) 	/*Measure of real inflation in capital prices*/
gen inflation=ln(l.price_us)-ln(price_us)				/*Inflation in aggregate price index*/
rangestat (mean) cap_gain cap_gain_real inflation, interval(year 1 10) by(indcode) /*Average capital gains in 10 years as proxy for expectations*/

**4. Construct several measures of user cost of capital**

***Rognlie: constant, linear and quadratic estimates for r (real, so use real capital gains)***
foreach var in con lin qua{
*Simple measures of user cost*
gen nipa_R_jorg_pd_`var'=`var'_updated/100+nipa_delta-cap_gain_real_mean                    /*Rental rate per dollar of capital in real dollars*/
replace nipa_R_jorg_pd_`var'=0.02 if nipa_R_jorg_pd_`var'<0.02 & nipa_R_jorg_pd_`var'!=.	/*Windorize results*/
gen nipa_R_jorg_unit_`var'=nipa_PK_real*nipa_R_jorg_pd_`var'            					/*Real unit prices*/

*taking taxes into account*
gen nipa_R_jorg_pd_`var'_tax=((1+taux)/(1-tauk))*(((1+l.taux)/((1+taux)*(1+cap_gain_real_mean)))*(1+(`var'_updated/100)*(1-tauk))-(1-nipa_delta)-tauk*nipa_delta/(1+taux))	/*Rental rate per dollar of capital in real dollars*/
replace nipa_R_jorg_pd_`var'_tax=0.02 if nipa_R_jorg_pd_`var'_tax<0.02 & nipa_R_jorg_pd_`var'_tax!=.																		/*Windorize results*/
gen nipa_R_jorg_unit_`var'_tax=nipa_PK_real*nipa_R_jorg_pd_`var'_tax 																									    /*Real unit prices*/
}

*AAA (nominal, so use nominal capital gains)*
*Simple measures of user cost*
gen nipa_R_jorg_pd_AAA=AAA_updated/100+nipa_delta-cap_gain_mean 
replace nipa_R_jorg_pd_AAA=0.02 if nipa_R_jorg_pd_AAA<0.02 & nipa_R_jorg_pd_AAA!=.
gen nipa_R_jorg_unit_AAA=nipa_PK_real*nipa_R_jorg_pd_AAA 

*taking taxes into account*
gen nipa_R_jorg_pd_AAA_tax=((1+taux)/(1-tauk))*(((1+l.taux)/((1+taux)*(1+cap_gain_real_mean)))*(1+(AAA_updated/100-inflation_mean)*(1-tauk))-(1-nipa_delta)-tauk*nipa_delta/(1+taux))
replace nipa_R_jorg_pd_AAA_tax=0.02 if nipa_R_jorg_pd_AAA_tax<0.02 & nipa_R_jorg_pd_AAA_tax!=.
gen nipa_R_jorg_unit_AAA_tax=nipa_PK_real*nipa_R_jorg_pd_AAA_tax 

*Compute 5-year mnoving average to get rid of measurement error*
sort indcode year
rangestat (mean) nipa_R_jorg_pd_* nipa_R_jorg_unit*, by(indcode) interval(year -2 2)

keep industry_bea year nipa_PK_nom nipa_PK_real nipa_delta nipa_capvalue nipa_capqty nipa_R_jorg_*mean
save "${project}/temp_data/nipa_capital.dta", replace




